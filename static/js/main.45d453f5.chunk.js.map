{"version":3,"sources":["components/State.module.scss","components/header.module.scss","components/ClearEffect.module.scss","components/ActionBar.module.scss","components/Transition.module.scss","components/ContextMenu.module.scss","components/Animation.module.scss","context/UserContext.js","service/base-service.js","constant.js","service/user-service.js","service/login-service.js","components/Header.js","components/Home.js","components/SequenceNav.js","components/QuestionArea.js","components/ActionBar.js","lib/svg-math.js","components/Transition.js","components/SvgBase.js","components/State.js","components/ContextMenu.js","components/ClearEffect.js","components/AutomatonRender.js","service/question-service.js","components/Animation.js","service/test-automaton-service.js","components/ClearPopup.js","components/Play.js","components/LoginDialog.js","App.js","serviceWorker.js","messages.js","i18n.js","index.js","components/LoginDialog.module.scss","components/SequenceNav.module.scss"],"names":["module","exports","UserContext","React","createContext","id","displayName","axiosBase","create","baseURL","process","headers","withCredentials","responseType","getUser","a","baseApi","get","res","data","deleteUser","post","saveAutomaton","questionId","automaton","loadAutomaton","getGoogleAuthorizationUrl","state","params","URLSearchParams","response_type","client_id","scope","redirect_uri","toString","getState","console","log","getTwitterToken","getTwitterAuthorizationUrl","token","oauth_token","error","logout","Header","props","user","useTranslation","t","i18n","open","setOpen","dialogOpen","setDialogOpen","anchorRef","handleToggle","prevOpen","handleClose","event","current","contains","target","LoginService","window","location","reload","confirmRemoveAccount","removeAccount","UserService","profileArea","Button","aria-controls","aria-haspopup","onClick","ref","style","variant","color","setShowLoginModal","show","Grid","container","spacing","alignItems","justify","item","sm","background","borderRadius","marginTop","className","styles","header","paddingRight","Popper","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","elevation","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Home","QuestionItem","Card","CardContent","textAlign","overflow","iconClass","Typography","gutterBottom","title","questionList","map","v","i","key","to","textDecoration","paddingTop","height","margin","padding","SequenceNav","getStyle","s","sequenceStatusList","find","icon","status","verticalAlign","List","sequenceList","filter","accept","ListItem","value","dense","ListItemIcon","ListItemText","primary","QuestionArea","fontSize","questionText","R","allowInputs","ActionBar","useState","openResetDialog","setOpenResetDialog","SaveButton","onSave","marginRight","width","onReset","onTest","disabled","animationStart","onCancel","rotate","rad","cx","x","cy","y","ax","ay","Math","cos","sin","Transition","VALID_INPUT_PATTERN","inputWidth","setInputWidth","inputs","inputText","setInputText","useEffect","length","isSelf","from","distance","_x","_y","d","sqrt","pow","translation","PI","calcInputCoordinate","name","onContextMenu","e","contextMenuHandler","stopPropagation","intersection","start","end","c1","c2","r","from_x","from_y","to_x","to_y","getIntersectionOnCircle","_from","_to","calcPath","markerEnd","TextField","onInputClickHandler","maxLength","onChange","match","replace","split","validateInputs","index","onChangeHandler","onFocus","d3","raise","node","focus","SvgBase","svgDom","xmlns","pt","createSVGPoint","clientX","clientY","newPt","matrixTransform","getScreenCTM","inverse","border","maxWidth","preventDefault","children","State","clickCount","select","drag","on","updatePos","handler","states","setTimeout","onClickHandler","onDoubleClick","onDoubleClickHandler","acitve","stroke","strokeWidth","ContextMenu","left","top","items","button","itemClickHandler","displayText","ClearEffect","Drop","transform","Array","AutomatonRender","selectedStateId","setSelectedState","DEFAULT_CONTEXT_MENU_INFO","contextMenuInfo","setContextMenuInfo","clearEffectInfo","setClearEffectInfo","STATE_CONTEXT_MENU_ITEMS","STATE_START_CONTEXT_MENU_ITEMS","TRANSITION_CONTEXT_MENU_ITEMS","updateStatePos","stateId","updated","setStates","getCount","setCount","c","count","clickState","isTransitionDuplicate","transitions","concat","fromStateId","toStateId","setTransitons","doubleClickState","predicate","updateTransitionInputs","newTransitions","showContextMenu","pageX","pageY","itemClickCallback","clickStateContextMenuItem","clickTransitionContextMenuItem","closeContextMenu","itemClick","callback","itemName","deleteStateId","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","orient","fill","animation","rect","getBoundingClientRect","Number","getQuestion","Animation","targetId","setTargetId","animateMotionRef","propsRef","pos","setPos","failed","setFailed","timeoutList","animateMotionDom","animationTarget","reduce","cur","next","tsIndex","Promise","resolve","transitionOrderList","cur2","next2","tIndex","updateStatus","sequenceId","beginElement","Constant","push","then","stateOrderList","t1","t2","result","startClearEffect","t3","setAnimationStart","setClearPopupOpen","forEach","clearTimeout","sequences","FailedAnimation","attributeName","values","dur","repeatCount","display","xlinkHref","testAutomaton","automatonData","ClearPopup","history","useHistory","Trans","i18nKey","Play","useContext","setSequences","setSequenceStatusList","questionData","setQuestionData","INITIAL_STATES","setTransitions","setAnimationTarget","clearPopupOpen","QuestionService","TestAutomatonService","Object","updateSequenceStatus","updateSequenceStatusList","LoginDialog","loginByGoogle","googleAuthorizedUrl","href","loginByTwitter","twitterAuthorizedUrl","textTransform","App","setUser","showLoginModal","api","fallback","Provider","Container","path","component","Boolean","hostname","messages","ja","appTitle","cancel","removeAccountDialog","message","contextMenu","change","delete","actionBar","howToPlay","save","reset","test","stop","resetDialog","questionArea","inputSequences","sequenceNav","acceptingString","notAcceptingString","common","ok","close","clearPopup","nextQuestion","loginDialog","content","loginWithGoogle","loginWithTwitter","use","initReactI18next","init","resources","lng","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.45d453f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"state\":\"State_state__QKTrR\",\"normal\":\"State_normal__3t54K\",\"active\":\"State_active__3L6ZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2Cqvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropCommon\":\"ClearEffect_dropCommon__21ygH\",\"drop0\":\"ClearEffect_drop0__aq8hW\",\"drip0\":\"ClearEffect_drip0__VLuA7\",\"drop45\":\"ClearEffect_drop45__3TacX\",\"drip45\":\"ClearEffect_drip45__2Fgyk\",\"drop90\":\"ClearEffect_drop90__2vT1_\",\"drip90\":\"ClearEffect_drip90__3HLEH\",\"drop135\":\"ClearEffect_drop135__XgStZ\",\"drip135\":\"ClearEffect_drip135__3Np53\",\"drop180\":\"ClearEffect_drop180__Vbd2g\",\"drip180\":\"ClearEffect_drip180__2z1_J\",\"drop225\":\"ClearEffect_drop225__2I2oQ\",\"drip225\":\"ClearEffect_drip225__Gwk-7\",\"drop270\":\"ClearEffect_drop270__3AJcZ\",\"drip270\":\"ClearEffect_drip270__3atKl\",\"drop315\":\"ClearEffect_drop315__3dn9P\",\"drip315\":\"ClearEffect_drip315__15AU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionBar\":\"ActionBar_actionBar__3FK6c\",\"action-bar-wrapper\":\"ActionBar_action-bar-wrapper__mQlk7\",\"input-sequence-area\":\"ActionBar_input-sequence-area__1Ofh2\",\"input-sequence-lbl\":\"ActionBar_input-sequence-lbl__3QWPT\",\"input-sequence\":\"ActionBar_input-sequence__puxBj\",\"btn-area\":\"ActionBar_btn-area__3lRB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transition\":\"Transition_transition__1_xC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextmenu\":\"ContextMenu_contextmenu__3D9GI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"failed\":\"Animation_failed__30m8M\",\"failed-animation\":\"Animation_failed-animation__3Yw45\"};","import React from \"react\";\n\nconst UserContext = React.createContext({\n  id: '', displayName: ''\n});\n\nexport default UserContext;","import axiosBase from 'axios';\nimport * as constant from '../constant';\n\n\nexport default axiosBase.create({\n  baseURL:constant.API_ENDPOINT,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n  responseType: 'json'\n});","export const API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\nexport const GOOGLE_OPEN_ID_CONNECT_ENDPOINT =\n  process.env.REACT_APP_GOOGLE_OPEN_ID_CONNECT_ENDPOINT;\nexport const GOOGLE_CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nexport const GOOGLE_OPEN_ID_CONNECT_REDIRECT_URI = process.env.REACT_APP_GOOGLE_OPEN_ID_CONNECT_REDIRECT_URI;\n\nexport const REACT_APP_TWITTER_OAUTH_ENDPOINT = process.env.REACT_APP_TWITTER_OAUTH_ENDPOINT;\n\nexport const SVG_WIDTH = 660;\nexport const SVG_HEIGHT = 500;\nexport const QUESTION_SIZE = 8;\nexport const AUTOMATON_ANIMATION_DURATION = 0.8;","import baseApi from './base-service'\n\n\nexport async function getUser() {\n  try {\n    const res = await baseApi.get(`/user/current_user`);\n    return res.data;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function deleteUser() {\n  try {\n    const res = await baseApi.post(`/user/delete/current_user`);\n    return res.data;\n  } catch (error) {\n    // return null;\n  }\n}\n\nexport async function saveAutomaton(questionId, automaton) {\n  try {\n    const res = await baseApi.post(`/user/save_automaton/${questionId}`,\n      automaton);\n    return res.data;\n  } catch (error) {\n  }\n}\n\nexport async function loadAutomaton(questionId) {\n  try {\n    const res = await baseApi.get(`/user/load_automaton/${questionId}`);\n    return res.data;\n  } catch (error) {\n    return null;\n  }\n}","import baseApi from './base-service'\nimport * as Constant from '../constant'\nimport {useEffect, useState} from \"react\";\n\nexport function getGoogleAuthorizationUrl(state) {\n\n  let params = new URLSearchParams({\n    response_type: 'code',\n    client_id: Constant.GOOGLE_CLIENT_ID,\n    scope: 'openid profile',\n    redirect_uri: Constant.GOOGLE_OPEN_ID_CONNECT_REDIRECT_URI,\n    state: state\n  });\n  let url = `${Constant.GOOGLE_OPEN_ID_CONNECT_ENDPOINT}?${params.toString()}`;\n  return url;\n}\n\nexport async function getState() {\n  try {\n    const res = await baseApi.get(`/get_state`);\n    console.log(res)\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getTwitterToken() {\n  try {\n    const res = await baseApi.get(`/get/twitter_token`);\n    console.log(res)\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getTwitterAuthorizationUrl(token) {\n  try {\n    let params = new URLSearchParams({\n      oauth_token: token\n    });\n    let url = `${Constant.REACT_APP_TWITTER_OAUTH_ENDPOINT}?${params.toString()}`;\n    return url;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport async function logout() {\n  try {\n    const res = await baseApi.get(`/logout`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}","import * as React from \"react\";\nimport styles from \"./header.module.scss\";\nimport UserContext from \"../context/UserContext\";\nimport {useTranslation} from \"react-i18next\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport * as UserService from '../service/user-service';\nimport * as LoginService from '../service/login-service';\nimport {Dialog} from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction Header(props) {\n\n  const user = React.useContext(UserContext);\n  const {t, i18n} = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const LoginButton = () =>\n    <Button onClick={() => props.setShowLoginModal(show => !show)}\n            variant=\"outlined\">ログイン</Button>;\n\n  const UserProfile = () => (\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleToggle}\n            ref={anchorRef}\n            style={{'width': '70%'}} variant=\"outlined\" color=\"default\">\n      {user.displayName}\n    </Button>\n  );\n\n  const ProfileMenu = () => (\n    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n      {({TransitionProps, placement}) => (\n        <Grow\n          {...TransitionProps}\n          style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n        >\n          <Paper elevation={3}>\n            <ClickAwayListener onClickAway={handleClose}>\n              <MenuList autoFocusItem={open} id=\"menu-list-grow\">\n                <MenuItem onClick={logout}>{t('header.logout')}</MenuItem>\n                <MenuItem onClick={confirmRemoveAccount}>{t('header.removeAccount')}</MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  );\n\n  const RemoveAccountDialog = () => (\n    <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n      <DialogTitle>{t('header.removeAccountDialog.title')}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {t('header.removeAccountDialog.message')}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setDialogOpen(false)} color=\"default\">\n          {t('header.cancel')}\n        </Button>\n        <Button onClick={removeAccount} variant=\"contained\" color=\"secondary\">\n          {t('header.removeAccount')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  const logout = async () => {\n    handleToggle();\n    await LoginService.logout();\n    window.location.reload(false);\n  }\n\n  const confirmRemoveAccount = () => {\n    handleToggle();\n    setDialogOpen(true);\n  }\n\n  const removeAccount = async () => {\n    setDialogOpen(false);\n    await UserService.deleteUser();\n    window.location.reload(false);\n  }\n\n  let profileArea = user ? UserProfile : LoginButton;\n\n  return (\n    <Grid container spacing={3} alignItems=\"center\" justify=\"center\" id=\"appTitle\">\n      <Grid item sm={12}>\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\"\n              style={{background: 'white', borderRadius: '5px', marginTop: '20px'}}>\n          <Grid item sm={9}>\n            <h1 style={{'textAlign': 'center'}} className={styles.header}>{t('appTitle')}</h1>\n          </Grid>\n          <Grid item sm={3} style={{'textAlign': 'center', paddingRight: '20px'}}>\n            {profileArea()}\n            {ProfileMenu()}\n            {RemoveAccountDialog()}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styles from \"./header.module.scss\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Home() {\n\n  const ITEM_LIST = [\n    {iconClass: 'fas fa-shuttle-van'},\n    {iconClass: 'far fa-keyboard'},\n    {iconClass: 'fas fa-shuttle-van'},\n    {iconClass: 'fas fa-shuttle-van'},\n    {iconClass: 'fas fa-shuttle-van'},\n    {iconClass: 'fas fa-shuttle-van'},\n    {iconClass: 'fas fa-shuttle-van'},\n    {iconClass: 'fas fa-shuttle-van'}\n  ];\n\n  const QuestionItem = props => (\n    <Card style={{background: '#fff3ee'}}>\n      <CardContent style={{textAlign: \"center\", overflow: 'hidden'}}>\n        <i className=\"fas fa-heart\" style={{'fontSize': '25px', 'float': 'right', 'color': 'pink'}}></i>\n        <i className=\"far fa-heart\" style={{'fontSize': '25px', 'float': 'right', 'color': 'pink'}}></i>\n        <br/>\n        <br/>\n        <i className={props.iconClass} style={{'fontSize': '45px'}}></i>\n        <Typography color=\"textSecondary\" gutterBottom style={{marginTop: '8px'}}>\n          {props.title}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n\n  const questionList = ITEM_LIST.map((v, i) => {\n    return (\n      <Grid item sm={3} key={i + 1}>\n        <Link to={`/play/${i + 1}`} style={{textDecoration: 'none'}}>\n          <QuestionItem title={`レベル ${i + 1}`} iconClass={v.iconClass}></QuestionItem>\n        </Link>\n      </Grid>\n    );\n  });\n\n  return (\n    <>\n    <Grid container spacing={4}>\n      <Grid item sm={12}>\n        <Grid container alignItems=\"center\" justify=\"center\" spacing={1}\n              style={{marginTop: '20px', paddingTop: '40px', background: 'white', borderRadius: '5px'}}>\n          <Grid item sm={4} style={{textAlign: 'center'}}>\n            <Button variant=\"outlined\" color=\"primary\" style={{'width': '80%', height: '60px',}}>オートマトンとは</Button>\n          </Grid>\n          <Grid item sm={4} style={{textAlign: 'center'}}>\n            <Button variant=\"outlined\" color=\"primary\" style={{'width': '80%', height: '60px'}}>プレイ方法</Button>\n          </Grid>\n          <Grid container spacing={4} alignItems=\"center\" style={{margin: '20px 0px', padding: '20px'}}>\n            {questionList}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n</>\n)\n  ;\n}\n\nexport default Home;","import * as React from \"react\";\nimport * as style from \"./SequenceNav.module.scss\";\nimport {useTranslation} from \"react-i18next\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {prop} from \"ramda\";\n\nfunction SequenceNav(props) {\n\n  const {t, i18n} = useTranslation();\n\n  const renderAcceptList = () => {\n    return props.sequenceList.filter(s => s.accept).map(s => {\n      let styles = getStyle(s.id);\n      return (\n        <ListItem key={s.value} dense className={styles.className}>\n          <ListItemIcon>\n            <i className={styles.icon}></i>\n          </ListItemIcon>\n          <ListItemText id={s.id} primary={s.value}/>\n        </ListItem>\n      );\n    })\n  }\n\n  const renderRejectList = () => {\n    return props.sequenceList.filter(s => !s.accept).map(s => {\n      let styles = getStyle(s.id);\n      return (\n        <ListItem key={s.value} role={undefined} dense className={styles.className}>\n          <ListItemIcon>\n            <i className={styles.icon}></i>\n          </ListItemIcon>\n          <ListItemText id={s.id} primary={s.value}/>\n        </ListItem>\n      );\n    })\n  }\n\n  const getStyle = (id) => {\n    let s = props.sequenceStatusList.find(s => s.id === id);\n\n    if (!s) {\n      return {icon: 'far fa-circle', className: ''};\n    }\n\n    let status = s.status;\n\n    if (status === 'success') {\n      return {icon: 'far fa-check-circle', className: style.bgSuccess};\n    } else if (status === 'failed') {\n      return {icon: 'far fa-times-circle', className: style.bgFailed};\n    } else if (status === 'playing') {\n      return {\n        icon: 'far fa-play-circle '+ style.playingAnimation, className: style.bgPlaying\n      };\n    } else {\n      return {icon: 'far fa-circle', className: ''};\n    }\n  }\n\n  return (\n    <Paper elevation={3} style={{padding: '10px 3px 3px 10px', marginTop: '15px'}}>\n      <h4 style={{verticalAlign: 'middle', margin: '6px'}}>{t('sequenceNav.acceptingString')}</h4>\n      <List className={style.sequenceList}>\n        {renderAcceptList()}\n      </List>\n      <h4 style={{verticalAlign: 'middle', margin: '10px 6px 6px 6px'}}>{t('sequenceNav.notAcceptingString')}</h4>\n      <List className={style.sequenceList}>\n        {renderRejectList()}\n      </List>\n    </Paper>\n  );\n}\n\nexport default SequenceNav;","import * as React from \"react\";\nimport \"./ActionBar.module.scss\";\nimport * as R from \"ramda\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction QuestionArea(props) {\n\n  const {t, i18n} = useTranslation();\n\n  return (\n    <Grid container spacing={0} style={{marginTop: '20px'}}>\n      <Grid item sm={12}>\n        <Paper elevation={1} style={{padding: '4px 0px 17px 0px', textAlign: 'center'}}>\n          <p>\n            <span style={{fontSize: '22px'}}>{props.questionText}</span>\n          </p>\n          <span>\n            {t('questionArea.inputSequences')}［ {R.join(', ')(props.allowInputs)} ］\n          </span>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n\n}\n\nexport default QuestionArea;","import * as React from \"react\";\nimport \"./ActionBar.module.scss\";\nimport {useTranslation} from \"react-i18next\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport UserContext from \"../context/UserContext\";\nimport {Dialog} from \"@material-ui/core\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {useState} from \"react\";\n\nfunction ActionBar(props) {\n\n  const {t, i18n} = useTranslation();\n  const user = React.useContext(UserContext);\n  const [openResetDialog, setOpenResetDialog] = useState(false);\n\n  const SaveButton = <Button variant=\"outlined\" color=\"primary\" onClick={props.onSave}\n                             style={{marginRight: '10px', width: '75px'}}>{t('actionBar.save')}\n  </Button>;\n\n  const renderSaveButton = () => {\n    if (user) {\n      return SaveButton;\n    }\n    return null;\n  }\n\n  const onReset = () => {\n    setOpenResetDialog(false);\n    props.onReset();\n  }\n  const ResetDialog = () => (\n    <Dialog open={openResetDialog}>\n      <DialogContent>\n        <DialogContentText>\n          {t('actionBar.resetDialog.message')}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpenResetDialog(false)} color=\"default\">\n          {t('common.cancel')}\n        </Button>\n        <Button onClick={onReset} variant=\"contained\" color=\"secondary\">\n          {t('common.ok')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <Grid container style={{padding: '8px'}}>\n      <Grid item sm={6}>\n        <Button variant=\"outlined\" color=\"default\"\n                style={{margin: '0px 10px 0px 5px'}}>{t('actionBar.howToPlay')}</Button>\n        <Button variant=\"outlined\" color=\"secondary\"\n                onClick={() => setOpenResetDialog(true)}>\n          {t('actionBar.reset')}\n          </Button>\n        {ResetDialog()}\n      </Grid>\n      <Grid item sm={6} style={{textAlign: 'right'}}>\n        <span>\n          {renderSaveButton()}\n          <Button variant=\"contained\" color=\"primary\" onClick={props.onTest}\n                  style={{marginRight: '10px', width: '75px'}} disabled={props.animationStart}>\n            {t('actionBar.test')}</Button>\n          <Button variant=\"contained\" color=\"secondary\" style={{marginRight: '7px', width: '75px'}}\n                  onClick={props.onCancel} disabled={!props.animationStart}>\n            {t('actionBar.stop')}\n          </Button>\n        </span>\n      </Grid>\n    </Grid>);\n\n}\n\nexport default ActionBar;","export function rotate({x: cx, y: cy}, {x: px, y: py}, rad) {\n    let [ax, ay] = [px - cx, py - cy];\n    let [dx, dy] = [Math.cos(rad) * ax + Math.sin(rad) * ay, -Math.sin(rad) * ax + Math.cos(rad) * ay]\n    return {x: cx + dx, y: cy + dy};\n}\n\nexport function translation({x: ax, y: ay}, {x: px, y: py}, distance) {\n    let [_x, _y] = [px - ax, py - ay];\n    let d = Math.sqrt(Math.pow(_x, 2) + Math.pow(_y, 2));\n    let [dx, dy] = [distance / d * _x, distance / d * _y];\n    return {x: ax + dx, y: ay + dy};\n}\n\nexport function getIntersectionOnCircle({x: from_x, y: from_y}, {x: to_x, y: to_y}, r) {\n\n    let d = Math.sqrt(Math.pow(to_x - from_x, 2) + Math.pow(to_y - from_y, 2))\n\n    let cos = (to_x - from_x) / d\n    let sin = (to_y - from_y) / d\n\n    let [_x, _y] = [r * cos, r * sin]\n\n    return {\n        from: {\n            x: _x + from_x,\n            y: _y + from_y\n        },\n        to: {\n            x: to_x - _x,\n            y: to_y - _y\n        }\n    };\n}","import * as React from \"react\";\nimport {useEffect, useRef, useState} from \"react\";\nimport * as style from \"./Transition.module.scss\";\nimport {getIntersectionOnCircle, rotate, translation} from \"../lib/svg-math\";\nimport * as R from \"ramda\";\nimport TextField from \"@material-ui/core/TextField\";\nimport * as d3 from \"d3-selection\";\n\nfunction Transition(props) {\n\n  const INPUT_WIDTH_1CHAR = '26px';\n  const INPUT_WIDTH_2CHAR = '36px';\n  const INPUT_WIDTH_4CHAR = '46px';\n\n  const VALID_INPUT_PATTERN = /^(|[0-9a-z](,$|,[0-9a-z]){0,2})$/g\n\n  const [inputWidth, setInputWidth] = useState(INPUT_WIDTH_1CHAR);\n  const [inputText, setInputText] = useState(R.join(',', props.inputs));\n\n  useEffect(() => {\n    if (inputText.length < 2) {\n      setInputWidth(INPUT_WIDTH_1CHAR);\n    } else if (inputText.length < 4) {\n      setInputWidth(INPUT_WIDTH_2CHAR);\n    } else {\n      setInputWidth(INPUT_WIDTH_4CHAR);\n    }\n  }, [inputText]);\n\n  const calcPath = () => {\n    if (props.isSelf) {\n      let intersection = {x: props.to.x, y: props.to.y - 20};\n      let start = rotate(props.from, intersection, 0.2)\n      let end = rotate(props.from, intersection, -0.2)\n      let c1 = {x: start.x - 20, y: start.y - 30};\n      let c2 = {x: end.x + 20, y: end.y - 30};\n      return `M${start.x},${start.y}C${c1.x},${c1.y},${c2.x},${c2.y},${end.x},${end.y}`\n    } else {\n      let {from: _from, to: _to} = getIntersectionOnCircle(props.from, props.to, props.r);\n      let from = rotate(props.from, _from, 0.15);\n      let to = rotate(props.to, _to, -0.15);\n      return `M${from.x},${from.y}L${to.x},${to.y}`;\n    }\n  }\n\n  const calcInputCoordinate = () => {\n    if (props.isSelf) {\n      return {\n        x: props.to.x,\n        y: props.to.y - 60,\n      }\n    } else {\n      let t = {\n        x: (props.from.x + props.to.x) / 2,\n        y: (props.from.y + props.to.y) / 2\n      };\n      let r = rotate(t, props.to, Math.PI / 2);\n      return translation(t, r, 22);\n    }\n  }\n\n  const onChange = event => {\n\n    let inputText = event.target.value;\n\n    // 入力フォーマット誤り\n    if (!inputText.match(VALID_INPUT_PATTERN)) return;\n\n    let inputs = inputText.replace(/,$/, '').split(',');\n    if (!inputText) {\n      inputs = [];\n    }\n    // 重複文字あり\n    if (R.uniq(inputs).length !== inputs.length) return;\n\n    // 入力許可文字。入力重複チェック\n    if (!props.validateInputs(props.index, inputs)) return;\n\n    setInputText(inputText);\n    props.onChangeHandler(props.index, inputs);\n\n  }\n\n  const onFocus = () => {\n    d3.select(`#${props.id}`).raise();\n    // SVG要素の順序を更新した後に、テキストフィールドのフォーカスが外れるので、\n    // 再度フォーカスを当てる\n    d3.select(`#${props.id} input`).node().focus();\n  }\n\n  let {x, y} = calcInputCoordinate();\n  return (\n    <g id={props.id} name=\"transition\"\n       onContextMenu={e => props.contextMenuHandler(e, props.id, 'transition')}\n       onClick={e => e.stopPropagation()}\n       className={style.transition}>\n      <path id={props.id + \"_path\"} d={calcPath()} markerEnd={props.markerEnd}></path>\n      <foreignObject x={x - 15} y={y - 16}\n                     width={inputWidth}\n                     height='35px'\n                     id={'foreign_' + props.id}>\n        <TextField onClick={e => props.onInputClickHandler()} variant=\"outlined\" width={inputWidth}\n                   maxLength={5} onChange={onChange} value={inputText}\n                   onFocus={onFocus}/>\n      </foreignObject>\n    </g>\n  );\n\n\n}\n\nexport default Transition;","import * as React from \"react\";\nimport * as Constant from \"../constant\";\n\n\nfunction SvgBase(props) {\n\n  const svgDom = React.createRef();\n\n  const onClick = (event) => {\n    let pt = svgDom.current.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    let newPt = pt.matrixTransform(svgDom.current.getScreenCTM().inverse());\n    props.onClick({x: newPt.x, y: newPt.y});\n  };\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height={Constant.SVG_HEIGHT} width={'100%'} onClick={onClick}\n         ref={svgDom} style={{border: 'solid black 1px', maxWidth: `${Constant.SVG_WIDTH}px`}}\n         onContextMenu={e => e.preventDefault()}>\n      {props.children}\n    </svg>\n  )\n}\n\nexport default SvgBase;","import * as React from \"react\";\nimport * as style from \"./State.module.scss\";\nimport {useEffect, useState} from \"react\";\nimport {drag} from \"d3-drag\";\nimport {select} from \"d3-selection\";\nimport * as d3 from \"d3\";\n\nimport * as R from \"ramda\";\nimport SvgBase from \"./SvgBase\";\nimport * as Constant from \"../constant\";\n\n\nfunction State(props) {\n\n  let clickCount = 0;\n\n  useEffect(() => {\n    let s = select(\"#\" + props.id);\n    let handler = drag().on(\"drag\", event => {\n      if (event.x < 0 || event.x > Constant.SVG_WIDTH\n          || event.y < 0 || event.y > Constant.SVG_HEIGHT) {\n        return;\n      }\n      props.updatePos(props.id, {x: event.x, y: event.y});\n    });\n    handler(s);\n  }, [props.states]);\n\n  const onClick = (event) => {\n    setTimeout(() => {\n      if (clickCount > 0) {\n        clickCount--;\n        return;\n      }\n      props.onClickHandler(props.id);\n    }, 250);\n    event.stopPropagation();\n  }\n\n  const onDoubleClick = () => {\n    clickCount = 2;\n    props.onDoubleClickHandler(props.id);\n  }\n\n  const renderAccept = () => {\n    if (props.accept) {\n      return <circle r=\"12\" cx={props.x} cy={props.y}></circle>;\n    }\n    return null;\n  }\n\n  const stateClass = () => {\n    if (props.acitve) {\n      return style.active;\n    } else {\n      return style.normal;\n    }\n  }\n\n  const renderStartTransition = () => {\n    if (props.id === 'stateId_0') {\n      return (\n        <path d={`M${props.x - 50},${props.y}L${props.x - 20},${props.y}`} id=\"transitionId_0_path\"\n              markerEnd=\"url(#triangle)\" stroke=\"black\" strokeWidth=\"2.5px\" style={{padding: '3px'}}\n              onClick={e => e.stopPropagation()}/>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <g id={props.id} name=\"state\"\n       // className={props.getClassName}\n       onClick={onClick}\n       onDoubleClick={onDoubleClick}\n       onContextMenu={props.contextMenuHandler}\n       className={`${style.state} ${stateClass()}`}\n    >\n      <circle r=\"20\" cx={props.x} cy={props.y}>\n      </circle>\n      {renderAccept()}\n      {renderStartTransition()}\n    </g>\n  );\n\n}\n\nexport default State;","import * as React from \"react\";\nimport * as style from \"./ContextMenu.module.scss\"\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction ContextMenu(props) {\n\n  const renderItems = () => {\n    return props.items.map(i => {\n      return (\n        <ListItem key={i.name} role={undefined} dense button\n                  onClick={e => props.itemClickHandler(e, i.name)} name={i.name} key={i.name}>\n          <ListItemText id={i.name} primary={i.displayText}/>\n        </ListItem>\n      );\n    });\n  };\n\n  const getPosition = () => {\n    return {\n      left: props.x,\n      top: props.y\n    }\n  }\n\n  if (!props.show) return null;\n\n  return (\n    <Paper elevation={4} onContextMenu={e => e.preventDefault()} style={getPosition()}\n           className={style.contextmenu}>\n      <List>\n        {renderItems()}\n      </List>\n    </Paper>\n  );\n\n}\n\nexport default ContextMenu;","import React from \"react\";\nimport * as style from \"./ClearEffect.module.scss\";\nimport {divide} from \"ramda\";\n\nfunction ClearEffect(props) {\n\n  const Drop = props => {\n    let styles = {\n      top: props.top + 'px',\n      left: props.left + 'px',\n      transform: `rotate(${props.rotate}deg)`\n    };\n    return <div className={`${style.dropCommon} ${style['drop' + props.rotate]}`} style={styles}/>;\n  }\n\n  const DropList = Array(8).map((d, index) => {\n    let rotate = index * 45;\n    return <Drop rotate={rotate} top={props.top} left={props.left} index={index}/>;\n  })\n\n  return (\n    <div id=\"clearEffect\">\n      <Drop rotate={0} top={props.top} left={props.left}/>\n      <Drop rotate={45} top={props.top} left={props.left}/>\n      <Drop rotate={90} top={props.top} left={props.left}/>\n      <Drop rotate={135} top={props.top} left={props.left}/>\n      <Drop rotate={180} top={props.top} left={props.left}/>\n      <Drop rotate={225} top={props.top} left={props.left}/>\n      <Drop rotate={270} top={props.top} left={props.left}/>\n      <Drop rotate={315} top={props.top} left={props.left}/>\n    </div>\n  );\n}\n\nexport default ClearEffect;","import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport * as R from \"ramda\";\nimport Transition from \"./Transition\";\nimport State from \"./State\";\nimport ContextMenu from \"./ContextMenu\";\nimport SvgBase from \"./SvgBase\";\nimport ClearEffect from \"./ClearEffect\";\nimport * as d3 from \"d3\";\n\nfunction AutomatonRender(props) {\n\n  const {t, i18n} = useTranslation();\n  const [selectedStateId, setSelectedState] = useState('');\n\n  const DEFAULT_CONTEXT_MENU_INFO = {show: false, x: 0, y: 0, items: []};\n  const [contextMenuInfo, setContextMenuInfo] = useState(DEFAULT_CONTEXT_MENU_INFO);\n  const [clearEffectInfo, setClearEffectInfo] = useState({show: false, top: 0, left: 0});\n\n  const STATE_CONTEXT_MENU_ITEMS = [\n    {'name': 'change', 'displayText': t('contextMenu.change')},\n    {'name': 'delete', 'displayText': t('contextMenu.delete')}\n  ];\n  const STATE_START_CONTEXT_MENU_ITEMS = [\n    {'name': 'change', 'displayText': t('contextMenu.change')},\n  ];\n  const TRANSITION_CONTEXT_MENU_ITEMS = [\n    {'name': 'delete', 'displayText': t('contextMenu.delete')}\n  ];\n\n  const renderStates = () => {\n    return props.states.map((s, index) => {\n      return <State\n        id={s.id} x={s.x} y={s.y}\n        key={s.id}\n        accept={s.accept}\n        acitve={s.id === selectedStateId}\n        onClickHandler={clickState}\n        onDoubleClickHandler={doubleClickState}\n        contextMenuHandler={showContextMenu('state', index)}\n        updatePos={updateStatePos}\n        states={props.states}\n        index={index}\n      ></State>\n    });\n  }\n\n  const updateStatePos = (stateId, {x, y}) => {\n    let index = R.findIndex(R.propEq('id', stateId))(props.states);\n    let updated = R.mergeRight(props.states[index], {x, y});\n    let states = R.update(index, updated, props.states);\n    setContextMenuInfo(DEFAULT_CONTEXT_MENU_INFO);\n    setSelectedState(stateId);\n    props.setStates(states);\n  }\n\n  const renderTransitions = () => {\n    return props.transitions.map((t, index) => {\n      let _from = props.states.filter(s => s.id === t.fromStateId)[0];\n      let from = {x: _from.x, y: _from.y};\n      let _to = props.states.filter(s => s.id === t.toStateId)[0];\n      let to = {x: _to.x, y: _to.y};\n      return <Transition key={t.id} id={t.id} isSelf={t.fromStateId === t.toStateId}\n                         from={from} to={to} r={20} markerEnd=\"url(#triangle)\"\n                         inputs={t.inputs}\n                         index={index}\n                         validateInputs={validateInputs}\n                         contextMenuHandler={showContextMenu('transition', index)}\n                         onChangeHandler={updateTransitionInputs}\n                         onInputClickHandler={closeContextMenu}\n      ></Transition>\n    })\n  }\n\n  const renderContextMenu = () => {\n    if (!contextMenuInfo.show) return null;\n    return (\n      <ContextMenu show={contextMenuInfo.show} items={contextMenuInfo.items}\n                   x={contextMenuInfo.x} y={contextMenuInfo.y}\n                   itemClickHandler={itemClick(contextMenuInfo.itemClickCallback)}/>\n    );\n  };\n\n  const renderClearEffect = () => {\n    if (clearEffectInfo.show) {\n      return <ClearEffect top={clearEffectInfo.top} left={clearEffectInfo.left}/>\n    }\n    return null;\n  }\n\n  const startClearEffect = (stateId) => {\n    let state = props.states.find(s => s.id === stateId);\n    let rect = d3.select(`#${stateId}`).node().getBoundingClientRect();\n    setClearEffectInfo({show: true, top: rect.top, left: Number(rect.left) + 14});\n  }\n\n  const getCount = () => {\n    props.setCount(c => c + 1);\n    return props.count;\n  };\n\n  const clickState = (stateId) => {\n    setContextMenuInfo(DEFAULT_CONTEXT_MENU_INFO);\n    if (selectedStateId === '') {\n      setSelectedState(stateId);\n    } else if (stateId === selectedStateId) {\n      setSelectedState('');\n    } else {\n      setSelectedState(stateId);\n\n      if (isTransitionDuplicate(selectedStateId, stateId)) return;\n\n      let transitions = props.transitions.concat({\n        id: `transitionId_${getCount()}`,\n        fromStateId: selectedStateId,\n        toStateId: stateId,\n        inputs: []\n      });\n      props.setTransitons(transitions);\n    }\n  }\n\n  const doubleClickState = (stateId) => {\n    setContextMenuInfo(DEFAULT_CONTEXT_MENU_INFO);\n\n    if (isTransitionDuplicate(stateId, stateId)) return;\n\n    let transitions = props.transitions.concat({\n      id: `transitionId_${getCount()}`,\n      fromStateId: stateId,\n      toStateId: stateId,\n      inputs: []\n    });\n    props.setTransitons(transitions);\n  }\n\n  const isTransitionDuplicate = (fromStateId, toStateId) => {\n    let predicate = R.where({\n      'fromStateId': R.equals(fromStateId),\n      'toStateId': R.equals(toStateId)\n    });\n    return R.any(predicate, props.transitions);\n  }\n\n  const clickSvg = ({x, y}) => {\n    if (contextMenuInfo.show) {\n      setContextMenuInfo(DEFAULT_CONTEXT_MENU_INFO);\n      return;\n    }\n    let states = props.states.concat(\n      {\n        id: `stateId_${getCount()}`,\n        x: x,\n        y: y,\n        accept: false,\n      }\n    )\n    props.setStates(states);\n  }\n\n  const updateTransitionInputs = (index, inputs) => {\n    let updated = R.mergeRight(props.transitions[index], {inputs: inputs});\n    let newTransitions = R.update(index, updated, props.transitions);\n    props.setTransitons(newTransitions);\n  }\n\n  const validateInputs = (index, inputs) => {\n    if (R.union(props.allowInputs, inputs).length !== props.allowInputs.length) {\n      return false;\n    }\n    let fromStateId = props.transitions[index].fromStateId;\n    let id = props.transitions[index].id;\n    const predicate = R.where({\n      'fromStateId': R.equals(fromStateId),\n      'id': R.complement(R.equals(id)),\n      'inputs': v => R.intersection(v, inputs).length !== 0\n    });\n    if (R.any(predicate)(props.transitions))\n      return false;\n    return true\n  }\n\n  const showContextMenu = (name, index) => {\n    return (event) => {\n      let items;\n      if (name === 'state') {\n        if (index === 0) {\n          items = STATE_START_CONTEXT_MENU_ITEMS;\n        } else {\n          items = STATE_CONTEXT_MENU_ITEMS;\n        }\n      } else {\n        items = TRANSITION_CONTEXT_MENU_ITEMS;\n      }\n      let contextMenuInfo = {\n        show: true,\n        x: event.pageX,\n        y: event.pageY,\n        items: items,\n        itemClickCallback: name === 'state' ?\n          clickStateContextMenuItem(index) : clickTransitionContextMenuItem(index)\n      }\n      setContextMenuInfo(contextMenuInfo);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  const closeContextMenu = () => {\n    setContextMenuInfo(DEFAULT_CONTEXT_MENU_INFO);\n  }\n\n  const itemClick = (callback) => {\n    return (event, itemName) => {\n      callback(itemName);\n      setSelectedState('');\n      setContextMenuInfo(DEFAULT_CONTEXT_MENU_INFO);\n      event.stopPropagation();\n    }\n  }\n\n  const clickStateContextMenuItem = index => {\n    return itemName => {\n      if (itemName === 'change') {\n        let updated = R.mergeRight(props.states[index],\n          {accept: !props.states[index].accept});\n        props.setStates(R.update(index, updated, props.states));\n      } else if (itemName === 'delete') {\n        let deleteStateId = props.states[index].id;\n        let transitions = R.filter(R.where(\n          {\n            'fromStateId': R.complement(R.equals(deleteStateId)),\n            'toStateId': R.complement(R.equals(deleteStateId))\n          }\n        ), props.transitions);\n        props.setTransitons(transitions);\n        props.setStates(R.remove(index, 1, props.states));\n      }\n    };\n  }\n\n  const clickTransitionContextMenuItem = index => {\n    return itemName => {\n      if (itemName === 'delete') {\n        props.setTransitons(R.remove(index, 1, props.transitions));\n      }\n    };\n  }\n\n  return (\n    <div style={{padding: '5px 10px 5px 8px'}}>\n      {renderContextMenu()}\n      {renderClearEffect()}\n      <SvgBase onClick={clickSvg}>\n        <defs>\n          <marker id=\"triangle\" viewBox=\"0 0 10 10\"\n                  refX=\"10\" refY=\"5\"\n                  markerUnits=\"strokeWidth\"\n                  markerWidth=\"5\" markerHeight=\"5\"\n                  orient=\"auto\">\n            <path d=\"M 0 0 L 10 5 L 0 10\" fill=\"#333333\"/>\n          </marker>\n          <g id=\"state\">\n            <circle r=\"20\"></circle>\n          </g>\n          <g id=\"accept\">\n            <circle r=\"20\"></circle>\n            <circle r=\"15\"></circle>\n          </g>\n        </defs>\n        {renderStates()}\n        {renderTransitions()}\n        {props.animation(setClearEffectInfo, startClearEffect)}\n      </SvgBase>\n    </div>\n  )\n\n}\n\n\nexport default AutomatonRender;","import baseApi from './base-service'\n\nexport async function getQuestion(questionId) {\n\n  try {\n    const res = await baseApi.get(`/question/${questionId}`);\n    console.log(res)\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n\n}","import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport * as style from \"./Animation.module.scss\"\nimport * as R from \"ramda\";\nimport {sequence} from \"ramda\";\nimport * as Constant from \"../constant\";\n\nfunction Animation(props) {\n\n  const [targetId, setTargetId] = useState('');\n\n  const animateMotionRef = React.createRef();\n  const propsRef = React.useRef(props);\n  const [pos, setPos] = useState({x: 0, y: 0});\n  const [failed, setFailed] = useState(false);\n\n  let timeoutList = [];\n\n  useEffect(() => {\n\n    if (!props.animationStart) return;\n    const animateMotionDom = animateMotionRef.current;\n\n    console.log(props.animationTarget)\n\n    props.animationTarget.reduce(async (cur, next, tsIndex) => {\n      await cur;\n      setPos({x: 0, y: 0});\n      props.setClearEffectInfo({show: false});\n      await new Promise(resolve => {\n        let transitionsList = R.insert(0, 'transitionId_0', next.transitionOrderList);\n        transitionsList.reduce(async (cur2, next2, tIndex) => {\n\n          await cur2;\n          await new Promise(resolve => {\n            const t1 = setTimeout(() => {\n\n            }, 50);\n            const t = setTimeout(async () => {\n              if (tIndex === 0) {\n                propsRef.current.updateStatus(next.sequenceId, 'playing');\n              }\n              setTargetId(next2 + '_path');\n              animateMotionDom.beginElement();\n              resolve();\n            }, tIndex === 0 ? 0 : Constant.AUTOMATON_ANIMATION_DURATION * 1000);\n            timeoutList.push(t);\n          })\n        }, Promise.resolve()).then(() => resolve());\n      });\n      await new Promise(resolve => {\n        let stateId = R.last(props.animationTarget[tsIndex].stateOrderList);\n        const t1 = setTimeout(() => {\n          let state = props.states.find(s => s.id === stateId);\n          setPos({x: state.x, y: state.y});\n        }, Constant.AUTOMATON_ANIMATION_DURATION * 1000);\n        const t2 = setTimeout(() => {\n          let status = props.animationTarget[tsIndex].result ? 'success' : 'failed';\n          propsRef.current.updateStatus(next.sequenceId, status);\n          if (props.animationTarget[tsIndex].result) {\n            props.startClearEffect(stateId);\n            setTargetId('');\n          } else {\n            setFailed(true);\n          }\n        }, 1000);\n        const t3 = setTimeout(() => {\n          if (!props.animationTarget[tsIndex].result) {\n            setFailed(false);\n            propsRef.current.setAnimationStart(false);\n            return;\n          }\n          resolve();\n        }, 1800);\n        timeoutList.push(t1);\n        timeoutList.push(t2);\n        timeoutList.push(t3);\n      })\n    }, Promise.resolve()).then(() => {\n      props.setClearEffectInfo({show: false});\n      propsRef.current.setAnimationStart(false);\n      propsRef.current.setClearPopupOpen(true);\n    });\n\n    return () => {\n      console.log(timeoutList)\n      // タイマーをすべてクリア\n      timeoutList.forEach(t => clearTimeout(t));\n      // 再生中のシーケンスの状態を通常に更新\n      let index = R.findIndex(R.propEq('status', 'playing'))(propsRef.current.sequences);\n      if (index !== -1) {\n        let updated = R.mergeRight(propsRef.current.sequences[index])({'status': 'normal'});\n        propsRef.current.updateStatus(index, updated, propsRef.current.sequences)\n      }\n    }\n  }, [props.animationStart]);\n\n  useEffect(() => {\n    propsRef.current = props;\n  }, [props.sequenceStatusList, props.animationStart]);\n\n  const FailedAnimation = () => {\n\n    const ref = React.createRef();\n\n    useEffect(() => {\n      ref.current.beginElement();\n    }, [ref]);\n\n    return <animate ref={ref} attributeName=\"r\" values=\"13;0\" dur=\"0.8s\" repeatCount=\"1\"></animate>;\n  }\n\n  const renderFailedAnimation = () => {\n    if (failed) {\n      return <FailedAnimation/>;\n    }\n    return null;\n  }\n\n  if (props.animationStart) {\n    return (\n      <>\n        <circle cx={pos.x} cy={pos.y} r=\"13\" fill=\"pink\" style={{display: !targetId && 'none'}}\n          /*className={failed && style.failed}*/>\n          <animateMotion ref={animateMotionRef} dur={`${Constant.AUTOMATON_ANIMATION_DURATION + 0.01}s`}\n                         repeatCount=\"1\" styles={{display: 'none'}}>\n            <mpath xlinkHref={\"#\" + targetId}></mpath>\n          </animateMotion>\n          {renderFailedAnimation()}\n        </circle>\n      </>\n    );\n  }\n\n  return null;\n\n}\n\nexport default Animation;","import baseApi from './base-service'\n\nexport async function testAutomaton(questionId, automatonData) {\n\n  try {\n    const res = await baseApi.post(`/test/automaton/${questionId}`, automatonData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n\n}","import * as React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Trans, useTranslation} from \"react-i18next\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {useHistory} from 'react-router-dom';\nimport * as Constant from \"../constant\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction ClearPopup(props) {\n\n  const {t, i18n} = useTranslation();\n  const history = useHistory();\n\n  const onNextButtonClick = () => {\n    props.setOpen(false);\n    history.push(`/play/${props.questionId + 1}`);\n  }\n\n  return (\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n      <Paper elevation={4}>\n        <DialogContent>\n          <DialogContentText style={{fontSize: '1.1rem'}}>\n            <Trans i18nKey=\"clearPopup.message\" values={{title: props.title}}/>\n            {/*{t('clearPopup.message', {title: props.title})}*/}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setOpen(false)} color=\"default\">\n            {t('common.close')}\n          </Button>\n          <Button onClick={onNextButtonClick} variant=\"contained\" color=\"primary\"\n                disabled={props.questionId > Constant.QUESTION_SIZE}>\n            {t('clearPopup.nextQuestion')}\n          </Button>\n        </DialogActions>\n      </Paper>\n    </Dialog>\n  );\n\n}\n\nexport default ClearPopup;","import React, {useEffect, useState} from \"react\";\nimport \"./Play.css\";\nimport SequenceNav from \"./SequenceNav\";\nimport QuestionArea from \"./QuestionArea\";\nimport ActionBar from \"./ActionBar\";\nimport AutomatonRender from \"./AutomatonRender\";\nimport * as QuestionService from '../service/question-service';\nimport Animation from \"./Animation\";\nimport * as TestAutomatonService from \"../service/test-automaton-service\";\nimport * as UserService from \"../service/user-service\";\nimport * as R from \"ramda\";\nimport UserContext from \"../context/UserContext\";\nimport * as Constant from \"../constant\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {merge, mergeRight} from \"ramda\";\nimport ClearPopup from \"./ClearPopup\";\n\n\nfunction Play(props) {\n\n  const user = React.useContext(UserContext);\n\n  const questionId = props.match.params.questionId;\n  const [sequences, setSequences] = useState([]);\n  const [sequenceStatusList, setSequenceStatusList] = useState([]);\n  const [questionData, setQuestionData] = useState(\n    {questionText: '', allowInputs: []});\n\n  const INITIAL_COUNT = 1;\n  const INITIAL_STATES = [{\n    x: 60,\n    y: Constant.SVG_HEIGHT / 2,\n    id: 'stateId_0',\n    accept: false\n  }];\n  const [states, setStates] = useState(INITIAL_STATES);\n  const [transitions, setTransitions] = useState([]);\n  const [count, setCount] = useState(INITIAL_COUNT);\n\n  const [animationStart, setAnimationStart] = useState(false);\n  const [animationTarget, setAnimationTarget] = useState([]);\n\n  const [clearPopupOpen, setClearPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const questionData = async () => {\n      const data = await QuestionService.getQuestion(questionId);\n      setSequences(R.map(s => R.mergeLeft(s, {status: 'normal'}))(data.sequences));\n      setQuestionData(data);\n\n      if (user) {\n        let automatonData = await UserService.loadAutomaton(questionId);\n        if (automatonData) {\n          setStates(automatonData.states);\n          setTransitions(automatonData.transitions);\n          setCount(automatonData.count);\n        }\n      }\n      console.log(data)\n    }\n    questionData();\n  }, [questionId, user]);\n\n  const testAutomaton = async () => {\n    let automaton = {\n      states: states,\n      transitions: transitions\n    }\n    let data = await TestAutomatonService.testAutomaton(questionId, automaton);\n    // 入力文字列の実行結果を初期化\n    setSequenceStatusList(sequences.map(s => Object({id: s.id, status: 'none'})));\n    setAnimationTarget(data);\n    setAnimationStart(true);\n  }\n\n  const cancelTest = () => {\n    setAnimationStart(false);\n    setSequenceStatusList([]);\n  }\n\n  const saveAutomaton = async () => {\n    let automaton = {\n      states: states,\n      transitions: transitions,\n      count: count\n    };\n    await UserService.saveAutomaton(questionId, automaton);\n  }\n\n  const updateSequenceStatus = (id, status) => {\n    let index = R.findIndex(s => s.id === id, sequenceStatusList);\n    let updated = R.mergeRight(sequenceStatusList[index], {status: status});\n    let updateSequenceStatusList = R.update(index, updated, sequenceStatusList);\n    setSequenceStatusList(updateSequenceStatusList);\n  }\n\n  const resetAutomaton = () => {\n    setStates(INITIAL_STATES);\n    setTransitions([]);\n    setCount(INITIAL_COUNT);\n  }\n\n  return (\n    <>\n      <QuestionArea questionText={questionData.questionText}\n                    allowInputs={questionData.allowInputs}/>\n      <Grid container spacing={2}>\n        <Grid item sm={3}>\n          <SequenceNav sequenceList={sequences} sequenceStatusList={sequenceStatusList}/>\n        </Grid>\n        <Grid item sm={9}>\n          <ClearPopup open={clearPopupOpen} setOpen={setClearPopupOpen}\n                      questionId={questionId} title={questionData.title}></ClearPopup>\n          <Paper elevation={3} style={{marginTop: '15px'}}>\n            <ActionBar onTest={testAutomaton} onSave={saveAutomaton}\n                       onReset={resetAutomaton}\n                       onCancel={cancelTest}\n                       animationStart={animationStart}></ActionBar>\n            <AutomatonRender\n              states={states}\n              setStates={setStates}\n              transitions={transitions}\n              setTransitons={setTransitions}\n              count={count}\n              setCount={setCount}\n              allowInputs={questionData.allowInputs}\n              questionId={questionId}\n              animation={(setClearEffectInfo, startClearEffect) => (\n                <Animation animationStart={animationStart}\n                           animationTarget={animationTarget}\n                           setAnimationStart={setAnimationStart}\n                           updateStatus={updateSequenceStatus}\n                           sequences={sequences}\n                           questionId={questionId}\n                           states={states}\n                           setClearEffectInfo={setClearEffectInfo}\n                           startClearEffect={startClearEffect}\n                           sequenceStatusList={sequenceStatusList}\n                           setSequenceStatusList={setSequenceStatusList}\n                           setClearPopupOpen={setClearPopupOpen}\n                />\n              )}>\n            </AutomatonRender>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Play;","import * as React from \"react\";\nimport * as LoginService from \"../service/login-service\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport * as style from \"./LoginDialog.module.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {Trans, useTranslation} from \"react-i18next\";\n\nfunction LoginDialog(props) {\n\n  const {t, i18n} = useTranslation();\n\n  const loginByGoogle = async () => {\n    let {state} = await LoginService.getState();\n    let googleAuthorizedUrl = LoginService.getGoogleAuthorizationUrl(state);\n    window.location.href = googleAuthorizedUrl;\n  }\n\n  const loginByTwitter = async () => {\n    let {token} = await LoginService.getTwitterToken();\n    let twitterAuthorizedUrl = LoginService.getTwitterAuthorizationUrl(token);\n    window.location.href = twitterAuthorizedUrl;\n  }\n\n  return (\n    <Dialog\n      // fullWidth={50}\n      maxWidth='sm'\n      open={props.open}\n      onClose={() => props.setOpen(false)}>\n      <DialogTitle>\n        {t('loginDialog.title')}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <Trans i18nKey=\"loginDialog.content\"/>\n        </DialogContentText>\n      </DialogContent>\n      <List style={{margin: 'auto'}}>\n        <ListItem>\n          <Button onClick={loginByTwitter} variant=\"outlined\"\n                  style={{textTransform: 'none', background: '#1DA1F2'}}\n                  className={`${style.loginButton} ${style.twitterBg}`}>\n            <i className={`fab fa-twitter ${style.loginIcon}`}/>\n            <span className={style.buttonText}>{t('loginDialog.loginWithTwitter')}</span>\n          </Button>\n        </ListItem>\n        <ListItem>\n          <Button onClick={loginByGoogle} variant=\"outlined\" style={{textTransform: 'none', background: '#DB4437'}}\n                  className={`${style.loginButton} ${style.googleBg}`}>\n            <i className={`fab fa-google ${style.loginIcon}`}/>\n            <span className={style.buttonText}>{t('loginDialog.loginWithGoogle')}</span>\n          </Button>\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n\n}\n\nexport default LoginDialog;","import React, {Suspense, useEffect, useState} from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport * as UserService from \"./service/user-service\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Play from \"./components/Play\";\nimport LoginDialog from \"./components/LoginDialog\";\nimport UserContext from \"./context/UserContext\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction App() {\n\n  const [user, setUser] = useState({});\n  const [showLoginModal, setShowLoginModal] = useState(false);\n\n  useEffect(() => {\n    const api = async () => {\n      const user = await UserService.getUser();\n      setUser(user);\n    }\n    api();\n  }, []);\n\n  return (\n    <Suspense fallback=\"loading\">\n      <UserContext.Provider value={user}>\n        <Router>\n          <Container id=\"app\" style={{background: '#66ddff'}} maxWidth=\"md\">\n            <Header setShowLoginModal={setShowLoginModal}/>\n            <LoginDialog open={showLoginModal} setOpen={setShowLoginModal}/>\n            <div className=\"grid-x grid-margin-x\">\n              <Switch>\n                <Route path=\"/play/:questionId\" component={Play}/>\n                <Route path=\"/\" component={Home}/>\n              </Switch>\n            </div>\n          </Container>\n        </Router>\n      </UserContext.Provider>\n    </Suspense>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const messages = {\n  ja: {\n    translation: {\n      appTitle: 'オートマトンのアプリ(仮)',\n      header: {\n        logout: 'ログアウト',\n        removeAccount: 'アカウント削除',\n        cancel: 'キャンセル',\n        removeAccountDialog: {\n          title: 'アカウント削除のご確認',\n          message: '作成したオートマトン、クリア履歴が削除されます。'\n        },\n      },\n      contextMenu: {\n        change: '変更',\n        delete: '削除'\n      },\n      actionBar: {\n        howToPlay: 'プレイ方法',\n        save: '保存',\n        reset: 'リセット',\n        test: '回答',\n        stop: '中止',\n        resetDialog: {\n          message: '作成したオートマトンを初期化しますがよろしいでしょうか？'\n        }\n      },\n      questionArea: {\n        inputSequences: '入力文字列：'\n      },\n      sequenceNav: {\n        acceptingString: '受理する文字列',\n        notAcceptingString: '拒否する文字列',\n      },\n      common: {\n        ok: 'OK',\n        close: '閉じる',\n        cancel: 'キャンセル'\n      },\n      clearPopup: {\n        title: 'Congratulations!!',\n        message: 'おめでとうございます！！<br/>{{title}}をクリアしました。',\n        nextQuestion: '次の問題に進む'\n      },\n      loginDialog: {\n        title: '外部システムと連携してログイン',\n        content: '以下の機能が利用できます。<br/>・作成したオートマトンの保存<br/> ・クリア履歴の保存',\n        loginWithGoogle: 'Googleアカウントでログイン',\n        loginWithTwitter: 'Twitterアカウントでログイン'\n      }\n    }\n  }\n}\n\nexport default messages;","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\n\n// import Backend from 'i18next-http-backend';\n// import LanguageDetector from 'i18next-browser-languagedetector';\n\nimport messages from './messages';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  // .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources: messages,\n    lng: 'ja',\n    fallbackLng: 'ja',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginButton\":\"LoginDialog_loginButton__36J-h\",\"loginIcon\":\"LoginDialog_loginIcon__182Sa\",\"buttonText\":\"LoginDialog_buttonText__2PPMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sequenceList\":\"SequenceNav_sequenceList__1kx2u\",\"bgSuccess\":\"SequenceNav_bgSuccess__1ehTQ\",\"bgFailed\":\"SequenceNav_bgFailed__wboLr\",\"bgPlaying\":\"SequenceNav_bgPlaying__3-eIN\",\"playingAnimation\":\"SequenceNav_playingAnimation__2BToI\",\"anim_sc\":\"SequenceNav_anim_sc__bCJ0H\"};"],"sourceRoot":""}